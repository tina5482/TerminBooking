@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var path = Context?.Request?.Path.Value?.ToLowerInvariant() ?? "";
    var onLogin = path.Contains("/account/login");
    var onRegister = path.Contains("/account/register");
}

<ul class="navbar-nav flex-row gap-3 m-0">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello, @User.Identity?.Name!
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/" method="post">
                <button type="submit" class="nav-link btn btn-link p-0 text-dark">Log out</button>
            </form>
        </li>
    }
    else
    {
        @* pokaži SAMO suprotni link *@
        @if (!onLogin)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Log in</a>
            </li>
        }
        @if (!onRegister)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
        }
    }
</ul>
